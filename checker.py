import os
import asyncio
import logging
from aiogram import Bot
from dotenv import load_dotenv
from pybit.unified_trading import HTTP

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN", "6363721955:AAEyulmzYj5hF45DPJV1TWLCw_hRj6Y_jx0")
CHAT_ID = int(os.getenv("CHAT_ID",-4907450617))
POLL_INTERVAL = int(os.getenv("POLL_INTERVAL", 5))
THRESHOLD_PERCENT = float(os.getenv("THRESHOLD_PERCENT", 0.1))
BYBIT_TESTNET = os.getenv("BYBIT_TESTNET", "false").lower() == "true"

# –ë–æ—Ç –∏ pybit-—Å–µ—Å—Å–∏—è
bot = Bot(token=BOT_TOKEN)
session = HTTP(testnet=BYBIT_TESTNET)

last_value = None

def fetch_price() -> float:
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–µ–Ω—É BTCUSDT"""
    data = session.get_tickers(category="linear", symbol="ETHUSDT")
    return float(data["result"]["list"][0]["lastPrice"])




async def check_loop():
    """–¶–∏–∫–ª, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã"""
    global last_value
    while True:
        try:
            current = await asyncio.to_thread(fetch_price)
            if last_value is not None:
                diff = abs(current - last_value) / last_value * 100
                if diff >= THRESHOLD_PERCENT:
                    msg = f"üìä –ó–º—ñ–Ω–∞: {diff:.2f}%\n–ë—É–ª–æ: {last_value}\n–°—Ç–∞–ª–æ: {current}"
                else:
                    msg = f"‚ÑπÔ∏è –¶—ñ–Ω–∞ –Ω–µ –∑–º—ñ–Ω–∏–ª–∞—Å—å —Å—É—Ç—Ç—î–≤–æ: {current}"
                    await bot.send_message(CHAT_ID, msg)
            last_value = current
        except Exception as e:
            logging.warning(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ü—ñ–Ω–∏: {e}")
        await asyncio.sleep(POLL_INTERVAL)
